openapi: 3.0.0
info:
  title: SailApp API
  version: 0.1.9
paths:
  /boat:
    get:
      tags:
        - Boat
      summary: Returns a list of boats
      parameters:
      - in: query
        name: typeID
        schema:
          type: integer
        description: The id corresponding to the type of boats the user wants returned
      - in: classID
        name: classID
        schema:
          type: integer
        description: The id corresponding to the class of boats the user wants returned
      - in: teamID
        name: ownerID
        schema:
          type: integer
        description: The id corresponding to the team that are associated to the boats the user wants returned
      description: This will return all boats from the database. This call is filterable with the following query strings:
      responses:
        200:
          description: Successfully retrieved boats
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                  typeId:
                    type: integer
                  classId:
                    type: integer
                  ownerId:
                    type: integer
                  teamID:
                     type: integer
                     nullable: true
    post:
      tags:
        - Boat
      summary: Adds a Boat.
      responses:
        201:
          description: Successfully added a boat.
      parameters:
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - typeId
                - classId
                - ownerId
              properties:
                typeId:
                  type: integer
                  format: int32
                classId:
                  type: integer
                ownerId:
                  type: integer
                typeID:
                  type: integer
                  nullable: true
  /boat/{id}:
    get:
      tags:
        - Boat
      summary: Returns a list of boats
      parameters:
      - in: path
        name: Id
        schema:
          type: integer
        description: The id corresponding to the specific boat the user wants returned
      description: This will return the boat with the specified id defined in the path parameter
      responses:
        200:
          description: Successfully retrieved boats
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                  typeId:
                    type: integer
                  classId:
                    type: integer
                  ownerId:
                    type: integer
                  teamID:
                     type: integer
                     nullable: true
  
  

  /boat/{Id}:
    put:
      tags:
        - Boat
      summary: Updates a Boat
      description: Updates a Boat
      parameters:
      - in: path
        name: id 
        required: true
        schema:
          type: integer
          minimum: 1
        description: The boat ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - typeID
                - classId
                - ownerId
                - teamId
              properties:
                id:
                  type: integer
                  format: int32
                typeID:
                  type: integer
                  format: int32
                classId:
                  type: integer
                ownerId:
                  type: integer
                  format: int32
                teamId:
                  type: integer
                  items:
                    type: integer

      responses:
        204:
          description: Successfully updated a Boat

    delete:
      tags:
        - Boat
      summary: Deletes a Boat
      description: Deletes a Boat
      parameters:
      - in: path
        name: id 
        required: true
        schema:
          type: integer
          minimum: 1
        description: The boat ID

      responses:
        200:
          description: Successfully deleted a Boat

  /race:
      get:
        tags:
          - Race
        summary: Returns a list of races
        parameters:
        - in: eventId
          name: eventId
          schema:
            type: integer
          description: This call will return all races associated with a specific race
        - in: startTime
          name: startTime
          schema:
            type: integer
          description: This call will return all races that begin at a specific time
        - in: classId
          name: classId
          schema:
            type: integer
          description: This call will return all races of a specific class
        description: This will return all races from the database. This call is filterable with the following query strings:
        responses:
          200:
            description: Successfully retrieved boats
            content:
              application/json:
                schema:
                  properties:
                    id:
                      type: integer
                    eventId:
                      type: integer
                    startTime:
                      type: string
                      format: date
                      description: Start date and time
                      example: "2021-01-30 15:00:00"
                    classId:
                      type: integer
      post:
        tags:
          - Race
        summary: Adds a Race.
        responses:
          201:
            description: Successfully added a Race.
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - eventid
                  - startTime
                  - classId
                properties:
                  eventId:
                    type: integer
                  startTime:
                    type: string
                    format: date
                    description: Start date and time
                    example: "2021-01-30 15:00:00"
                  classId:
                    type: integer
  /race/{id}:
    get:
      tags:
        - Race
      summary: Returns a list of races
      parameters:
      - in: path
        name: Id
        schema:
          type: integer
        description: The id corresponding to the specific race the user wants returned
      description: This will return the race with the specified id defined in the path parameter
      responses:
        200:
          description: Successfully retrieved boats
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                  eventId:
                    type: integer
                  startTime:
                    type: string
                    format: date
                    description: Start date and time
                    example: "2021-01-30 15:00:00"
                  classId:
                    type: integer
  

  
  /race/{Id}:
    put:
      tags:
        - Race
      summary: Updates a Race
      responses:
          204:
            description: Successfully updated a Race.
      description: Updates a Race
      parameters:
      - in: path
        name: id 
        required: true
        schema:
          type: integer
          minimum: 1
        description: The Race ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - typeId
                - classId
                - ownerId
                - teamId
              properties:
                id:
                  type: integer
                  format: int32
                typeID:
                  type: integer
                  format: int32
                classId:
                  type: integer
                ownerId:
                  type: integer
                  format: int32
                teamId:
                  type: integer
                  items:
                    type: integer

    delete:
        tags:
          - Race
        summary: Deletes a Race
        description: Deletes a Race
        parameters:
        - in: path
          name: id 
          required: true
          schema:
            type: integer
            minimum: 1
          description: The race ID

        responses:
          200:
            description: Successfully deleted a Race
  
  /race/{Raceid}/boat/:
    get:
      tags:
        - Race
      summary: Returns a list of specific all boats that competed in a particular race - used to calculate positions and results.
      parameters:
      - in: path
        name: BoatId
        schema:
          type: integer
        description: The id corresponding to the specific boat the user wants returned
      - in: path
        name: RaceId
        schema:
          type: integer
        description: The id corresponding to the specific race the user wants returned
      description: This will return the data associated to the specific race and boat defined in the path params
      responses:
        200:
          description: Successfully retrieved data for these races and boats
          content:
            application/json:
              schema:
                properties:
                  startTime:
                    type: string
                    format: date
                    description: Start date and time
                    example: "2021-01-30 15:00:00"
                  finishTime:
                    type: string
                    format: date
                    description: Start date and time
                    example: "2021-01-30 15:00:00"
                  position:
                    type: integer
    post:
          tags:
            - Race
          summary: This will record the startTime, finishTime, position for a specific boat in a specific race 
          responses:
            201:
              description: Successfully added a Race.
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - boatId
                    - startTime
                    - finishTime
                    - position
                  properties:
                    boatId:
                      type: integer
                    startTime:
                      type: string
                      format: date
                      description: Start date and time
                      example: "2021-01-30 15:00:00"
                    finishTime:
                      type: string
                      format: date
                      description: Start date and time
                      example: "2021-01-30 15:00:00"
                    position:
                      type: integer

  /team:
    get:
      tags:
        - Team
      summary: Returns a list of teams
      parameters:
      - in: name
        name: name
        schema:
          type: string
        description: This call will return all teams associated with a specific name
      description: This will return all teams from the database. This call is filterable with the following query strings:
      responses:
        200:
          description: Successfully retrieved teams
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                  name:
                    type: integer

    post:
          tags:
            - Team
          summary: This will add a new team
          responses:
            201:
              description: Successfully added a Team.
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string

  /team/{id}:
    get:
      tags:
        - Team
      summary: Returns a list of teams
      parameters:
      - in: path
        name: Id
        schema:
          type: integer
        description: The id corresponding to the specific team the user wants returned
      description: This will return the team with the specified id defined in the path parameter
      responses:
        200:
          description: Successfully retrieved teams
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                  name:
                    type: string


  /team/{Id}:
    put:
      tags:
        - Team
      summary: Updates a team
      description: Updates a team
      parameters:
      - in: path
        name: id 
        required: true
        schema:
          type: integer
          minimum: 1
        description: The team ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - name
              properties:
                id:
                  type: integer
                  format: int32
                name:
                  type: string



    delete:
        tags:
          - Team  
        summary: Deletes a team
        description: Deletes a team
        parameters:
        - in: path
          name: id 
          required: true
          schema:
            type: integer
            minimum: 1
          description: The team ID

        responses:
          200:
            description: Successfully deleted a team

  /event:
    get:
      tags:
        - Event
      summary: Returns a list of events
      parameters:
      - in: name
        name: name
        schema:
          type: string
        description: This call will return all events associated with a specific name
      - in: creatorId
        name: creatorId
        schema:
          type: integer
        description: This call will return all events associated with a specific creatorId
      - in: startTime
        name: startTime
        schema:
          type: string
          format: date
          description: Start date and time
          example: "2021-01-30 15:00:00"
        description: This call will return all events associated with a specific creatorId
      description: This will return all events from the database. This call is filterable with the following query strings:
      responses:
        200:
          description: Successfully retrieved events
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                  eventTypeId:
                    type: integer
                  startTime:
                    type: string
                    format: date
                    description: Start date and time
                    example: "2021-01-30 15:00:00"
                  endDate:
                    type: string
                    format: date
                    description: Start date and time
                    example: "2021-01-30 15:00:00"
                  name:
                    type: string
                  creatorId:
                    type: integer
                  description:
                    type: string
    post:
          tags:
            - Event
          summary: This will add a new event
          responses:
            201:
              description: Successfully added event.
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - name
                  properties:
                    id:
                      type: integer
                    eventTypeId:
                      type: integer
                    startTime:
                      type: string
                      format: date
                      description: Start date and time
                      example: "2021-01-30 15:00:00"
                    endDate:
                      type: string
                      format: date
                      description: Start date and time
                      example: "2021-01-30 15:00:00"
                    name:
                      type: string
                    creatorId:
                      type: integer
                    description:
                      type: string
  /event/{id}:
    get:
      tags:
        - Event
      summary: Returns a list of events
      parameters:
      - in: path
        name: Id
        schema:
          type: integer
        description: The id corresponding to the specific event the user wants returned
      description: This will return the event with the specified id defined in the path parameter
      responses:
        200:
          description: Successfully retrieved event
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                  eventTypeId:
                    type: integer
                  startTime:
                    type: string
                    format: date
                    description: Start date and time
                    example: "2021-01-30 15:00:00"
                  endDate:
                    type: string
                    format: date
                    description: Start date and time
                    example: "2021-01-30 15:00:00"
                  name:
                    type: string
                  creatorId:
                    type: integer
                  description:
                    type: string



  /event/{Id}:
    put:
      tags:
        - Event
      summary: Updates a event
      description: Updates a event
      parameters:
      - in: path
        name: id 
        required: true
        schema:
          type: integer
          minimum: 1
        description: The event ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - eventTypeID
                - startTime
                - endDate
                - name
                - creatorId
                - description
              properties:
                id:
                  type: integer
                eventTypeId:
                  type: integer
                startTime:
                  type: string
                  format: date
                  description: Start date and time
                  example: "2021-01-30 15:00:00"
                endDate:
                  type: string
                  format: date
                  description: Start date and time
                  example: "2021-01-30 15:00:00"
                name:
                  type: string
                creatorId:
                  type: integer
                description:
                  type: string


    delete:
        tags:
          - Event  
        summary: Deletes an Event
        description: Deletes an Event
        parameters:
        - in: path
          name: id 
          required: true
          schema:
            type: integer
            minimum: 1
          description: The Event ID

        responses:
          200:
            description: Successfully deleted event


  /event/type:
    get:
      tags:
        - Event
      summary: Returns a list of event types
      parameters:
      - in: name
        name: name
        schema:
          type: string
        description: This call will return all event types associated with a specific name
      description: This will return all teams from the database. This call is filterable with the following query strings:
      responses:
        200:
          description: Successfully retrieved teams
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                  name:
                    type: string
    post:
          tags:
            - Event
          summary: This will add a new event type
          responses:
            201:
              description: Successfully added event type.
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - name
                  properties:
                    id:
                      type: integer
                    name:
                      type: string
  /event/type/{Id}:
    put:
      tags:
        - Event
      summary: Updates a event type
      description: Updates a event type
      parameters:
      - in: path
        name: id 
        required: true
        schema:
          type: integer
          minimum: 1
        description: The event type ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - name
              properties:
                id:
                  type: integer
                name:
                  type: string


                    
    delete:
        tags:
          - Event  
        summary: Deletes an Event tyoe
        description: Deletes an Event type
        parameters:
        - in: path
          name: id 
          required: true
          schema:
            type: integer
            minimum: 1
          description: The Event type ID

        responses:
          200:
            description: Successfully deleted event type

  /member:
    get:
      tags:
        - Member
      summary: Returns a list of members
      parameters:
      - in: name
        name: name
        schema:
          type: string
        description: This call will return all members associated with a specific name
      - in: roleId
        name: roleId
        schema:
          type: integer
        description: This call will return all memebrs associated with a specific roleId
      description: This will return all members from the database. This call is filterable with the following query strings:
      responses:
        200:
          description: Successfully retrieved events
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  roleID:
                    type: integer

    post:
        tags:
          - Member
        summary: This will add a new member
        responses:
          201:
            description: Successfully added member.
        requestBody:
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                  - roleId
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  roleId:
                    type: integer

  /member/{id}:
    get:
      tags:
        - Member
      summary: Returns a list of members
      parameters:
      - in: path
        name: Id
        schema:
          type: integer
        description: The id corresponding to the specific member the user wants returned
      description: This will return the member with the specified id defined in the path parameter
      responses:
        200:
          description: Successfully retrieved member
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                  name:
                    type: string
                  roleID:
                    type: integer

  /member/{Id}:
    put:
      tags:
        - Member
      summary: Updates a member
      description: Updates a member
      parameters:
      - in: path
        name: id 
        required: true
        schema:
          type: integer
          minimum: 1
        description: The member ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - name
                - roleId
              properties:
                id:
                  type: integer
                name:
                  type: string
                roleId:
                  type: integer

    
                      
    delete:
        tags:
          - Member  
        summary: Deletes a member
        description: Deletes a member
        parameters:
        - in: path
          name: id 
          required: true
          schema:
            type: integer
            minimum: 1
          description: The member ID

        responses:
          200:
            description: Successfully deleted member
        
  /member/role:
    get:
      tags:
        - Member
      summary: Returns a list of member roles
      parameters:
      - in: role
        name: role
        schema:
          type: string
        description: This call will return all roles associated with a specific role
      description: This will return all roles from the database. This call is filterable with the following query strings:
      responses:
        200:
          description: Successfully retrieved events
          content:
            application/json:
              schema:
                properties:
                  id:
                    type: integer
                  role:
                    type: string
    post:
          tags:
            - Member
          summary: This will add a new role
          responses:
            201:
              description: Successfully added new role.
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  required:
                    - role
                  properties:
                    role:
                      type: string
  /member/role/{Id}:
    put:
      tags:
        - Member
      summary: Updates a role value
      description: Updates a role value
      parameters:
      - in: path
        name: id 
        required: true
        schema:
          type: integer
          minimum: 1
        description: The role ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - id
                - role
              properties:
                id:
                  type: integer
                role:
                  type: string

 
                      
    delete:
        tags:
          - Member  
        summary: Deletes a role
        description: Deletes a role
        parameters:
        - in: path
          name: id 
          required: true
          schema:
            type: integer
            minimum: 1
          description: The role ID

        responses:
          200:
            description: Successfully deleted member

